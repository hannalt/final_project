{"version":3,"sources":["components/DarkMode.js","blob.js","App.js","reportWebVitals.js","index.js"],"names":["DarkMode","theme","clickedClass","body","document","lightTheme","darkTheme","localStorage","getItem","classList","add","className","id","onClick","e","replace","target","remove","setItem","switchTheme","Blob","p5","r","x","y","name","show","this","fill","red","green","blue","ellipse","pos","textAlign","CENTER","textSize","text","update","new_vel","createVector","mouseX","width","mouseY","height","setMag","vel","lerp","constrain","eats","other","Math","sqrt","sum","PI","random","alive","axios","require","App","props","state","username","password","question","answer","attempting_answer","loggedin","msg","register","retrieving","joke","playing","handleChange","setState","value","submitRegister","event","a","preventDefault","get","response","data","map","obj","includes","resetUserInputs","indexOf","payload","url","method","then","catch","componentDidMount","dosomething","submitLogin","console","log","users","undefined","same_username","find","user","getJoke","goToRegister","goToLogin","getPassword","resetAttempting","submitRetrieving","punchline","setup","onPlayGame","canvasInfo","blob","zoom","blobs","counter","timer","interval","timeIt","html","select","setInterval","xyz","createCanvas","windowWidth","windowHeight","position","i","draw","background","translate","new_scale","scale","length","splice","push","mouseIsPressed","round","goBack","clearInterval","myRef","React","createRef","onSubmit","type","onChange","placeholder","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.da194db4.chunk.js","sourcesContent":["import React from 'react';\r\nimport \"../AppDark.css\";\r\nconst DarkMode = () => {\r\n    let clickedClass = \"clicked\";\r\n    const body = document.body;\r\n    const lightTheme = \"light\";\r\n    const darkTheme = \"dark\";\r\n    let theme;\r\n    if (localStorage) {\r\n        theme = localStorage.getItem(\"theme\");\r\n    }\r\n    if (theme === lightTheme || theme === darkTheme) {\r\n        body.classList.add(theme);\r\n      } else {\r\n        body.classList.add(lightTheme);\r\n      }\r\n\r\n    const switchTheme = (e) => {\r\n        if(theme === darkTheme) {\r\n            body.classList.replace(darkTheme, lightTheme);\r\n            e.target.classList.remove(clickedClass);\r\n            localStorage.setItem(\"theme\", \"light\");\r\n            theme = lightTheme;\r\n        } else {\r\n            body.classList.replace(lightTheme, darkTheme);\r\n            e.target.classList.remove(clickedClass);\r\n            localStorage.setItem(\"theme\", \"dark\");\r\n            theme = darkTheme;\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <button\r\n            className = {theme === \"dark\" ? clickedClass : \"\"}\r\n            id= \"darkMode\"\r\n            onClick = {(e) => switchTheme(e)}\r\n        >Color Mode</button>\r\n    )\r\n};\r\n\r\nexport default DarkMode;","\r\n\r\nclass Blob{\r\n    //These are all of the variables each blob needs to be a blob\r\n    constructor (p5, r, x, y, id, name) {\r\n        this.p5 = p5;\r\n        this.pos = p5.createVector(x, y);\r\n        this.r = r;\r\n        this.vel = p5.createVector(0,0);\r\n        this.red = p5.random(35, 255);\r\n        this.blue = p5.random(35, 255);\r\n        this.green = p5.random(35, 255);\r\n        this.name = name;\r\n        this.id = id;\r\n        this.alive = true;\r\n    }\r\n    \r\n    //https://www.youtube.com/watch?v=JXuxYMGe4KI\r\n    //This prints the blob\r\n    show = function() {\r\n        this.p5.fill(this.red, this.green, this.blue);\r\n        this.p5.ellipse(this.pos.x, this.pos.y, this.r*2, this.r*2);\r\n        this.p5.fill(255);\r\n        this.p5.textAlign(this.p5.CENTER);\r\n        this.p5.textSize(3);\r\n        this.p5.text(this.name, this.pos.x, this.pos.y + this.r); \r\n    }\r\n\r\n    //https://www.youtube.com/watch?v=JXuxYMGe4KI\r\n    //This moves the blob\r\n    update = function() {\r\n        let new_vel = this.p5.createVector(this.p5.mouseX-this.p5.width/2, this.p5.mouseY-this.p5.height/2 );\r\n        new_vel.setMag(3);\r\n        this.vel.lerp(new_vel, 0.1); \r\n        this.pos.add(this.vel);\r\n\r\n    }\r\n\r\n    //https://www.youtube.com/watch?v=ZjVyKXp9hec\r\n    //This keeps the blob inside the board\r\n    //Changed blob to this\r\n    constrain= function() {\r\n        this.pos.x = this.p5.constrain(this.pos.x, -this.p5.width, this.p5.width);\r\n        this.pos.y = this.p5.constrain(this.pos.y, -this.p5.height, this.p5.height);\r\n    }\r\n\r\n    //https://www.youtube.com/watch?v=JXuxYMGe4KI\r\n    eats = function(other) {\r\n        //This is the distance formal\r\n        \r\n        let d = Math.sqrt(((other.pos.x - this.pos.x)**2)+((other.pos.y-this.pos.y)**2))\r\n     \r\n        //A blob can only eat another blob if they are closer together than their two \r\n        //radi (they are overlapping) and if it is bigger than the one it is eating\r\n        if ((d < this.r + other.r) && (this.r > other.r)){//\r\n            let sum = this.p5.PI *this.r *this.r + this.p5.PI * other.r *other.r;\r\n            this.r = (this.p5.sqrt(sum / this.p5.PI));\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n        \r\n    }\r\n}\r\nexport default Blob;","import React from 'react';\r\nimport Sketch from 'react-p5';\r\nimport './AppDark.css';\r\nimport DarkMode from './components/DarkMode';\r\nimport Blob from './blob';\r\nconst axios = require('axios');\r\n//let server = app.listen(3000);\r\n//let io = require('socket.io')(server);\r\n\r\n\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.myRef = React.createRef();\r\n  }\r\n\r\n  state = {\r\n    username: '',\r\n    password: '',\r\n    question: '',\r\n    answer: '', \r\n    attempting_answer: '',\r\n    loggedin: false,\r\n    msg: 'Put in your info!',\r\n    register: false, \r\n    retrieving: false,\r\n    joke: 'placeholder',\r\n    playing: false\r\n  }\r\n\r\n  handleChange = ({ target }) => {\r\n    this.setState({\r\n      [target.name]: target.value\r\n    });\r\n  }\r\n\r\n  //Check that username and password pass requirements\r\n  submitRegister = async (event) =>{\r\n    event.preventDefault();\r\n\r\n    const username = this.state.username;\r\n    const password = this.state.password;\r\n    const question = this.state.question;\r\n    const answer = this.state.answer;\r\n    \r\n    const response = await axios.get('/api');\r\n    const usernames = response.data.map((obj)=> {\r\n      return obj.username\r\n    });\r\n   \r\n    \r\n    if (usernames.includes(username)) {\r\n      this.state.msg = 'That username is taken. Please try another!';\r\n      this.resetUserInputs();\r\n      return;\r\n    };\r\n\r\n    if (username.indexOf(' ') >= 0 ||password.indexOf(' ') >= 0) {\r\n      this.state.msg = 'No whitespace allowed in username and password. Please try again!';\r\n      this.resetUserInputs();\r\n      return;\r\n    };\r\n\r\n    if (username === '' || password === '' || answer === '' || question === '') {\r\n      this.state.msg = 'You have to fill out all fields. Please try again!';\r\n      this.resetUserInputs();\r\n      return;\r\n    }\r\n\r\n    this.state.msg = 'Put in your info!';\r\n    const payload = {\r\n      username: this.state.username,\r\n      password: this.state.password,\r\n      question: this.state.question, \r\n      answer: this.state.answer\r\n    }\r\n    axios({\r\n      url: '/api/save',\r\n      method: 'POST',\r\n      data: payload\r\n    })\r\n      .then(() => {\r\n        //console.log(\"data has been sent\");\r\n        this.resetUserInputs();\r\n        //call do something if needed\r\n      })\r\n      .catch(()=> {\r\n        //console.log(\"error\");\r\n      })\r\n  }\r\n  resetUserInputs = () => {\r\n    this.setState({\r\n      username: '',\r\n      password: '',\r\n      question: '',\r\n      answer: ''\r\n    })\r\n  }\r\n  componentDidMount  = () => {\r\n    this.dosomething();\r\n  }\r\n  //in example this gets an updated list of blog posts each time one is submitted\r\n  dosomething = () => {\r\n    //console.log(\"do something\")\r\n    //do something everytime the page needs to load\r\n  }\r\n\r\n  //displayBlogPost \r\n  //gets called in new div in renders return to make a list of post. I don't think we need this functionality\r\n\r\n  submitLogin = async (event) =>{\r\n    event.preventDefault();\r\n    console.log('submitlogin')\r\n    const username = this.state.username;\r\n    const password = this.state.password;\r\n    const response = await axios.get('/api');\r\n    const users = response.data.map((obj)=> {\r\n      return {\r\n        username: obj.username,\r\n        password: obj.password,\r\n        question: obj.question,\r\n        answer: obj.answer\r\n      }\r\n    });\r\n    if (username === '' || password === '' ) {\r\n      this.state.msg = 'You have to fill out all fields. Please try again!';\r\n      this.resetUserInputs();\r\n      return;\r\n    }\r\n    const same_username = users.find(user => user.username === username);\r\n    if (same_username === undefined) {\r\n      this.state.msg  = 'Wrong username. Try again or make a new account!';\r\n      this.resetUserInputs();\r\n      return;\r\n    }\r\n    \r\n    //console.log('same_user: ', same_username);\r\n    if (same_username.password === password) {\r\n      this.getJoke();\r\n      this.setState({\r\n        loggedin: true, \r\n        username: same_username.username,\r\n        password: same_username.password,\r\n        question: same_username.question,\r\n        answer: same_username.answer\r\n      });\r\n      //console.log('Login state:', this.state)\r\n      this.state.msg  = 'You are logged in!';\r\n    } else {\r\n      this.state.msg = 'That was not correct. Try again!';\r\n      this.resetUserInputs();\r\n    }\r\n  }\r\n\r\n  goToRegister= (event)=>{\r\n    event.preventDefault();\r\n    this.setState({\r\n      register: true\r\n    });\r\n    this.resetUserInputs();\r\n  }\r\n  \r\n  goToLogin= (event)=>{\r\n    event.preventDefault();\r\n    this.setState({\r\n      register: false,\r\n      retrieving: false,\r\n      loggedin: false,\r\n      playing:false\r\n    });\r\n    this.resetUserInputs();\r\n  }\r\n\r\n  \r\n  getPassword = async (event) => {\r\n    event.preventDefault();\r\n    \r\n    const username = this.state.username;\r\n    this.state.retrieving = true;\r\n    \r\n    if (username === '' ){\r\n      this.state.msg = \"Please go back to login, put in your username, then click the 'Get your Password' button again.\"\r\n      this.resetUserInputs();\r\n      return\r\n    }\r\n    this.state.msg = 'Put in your info!';\r\n    \r\n    const response = await axios.get('/api');\r\n    const users = response.data.map((obj)=> {\r\n      return {\r\n        username: obj.username,\r\n        password: obj.password, \r\n        question: obj.question, \r\n        answer: obj.answer\r\n      }\r\n    });\r\n    \r\n    const same_username = users.find(user => user.username === username);\r\n    \r\n    if (same_username === undefined) {\r\n      this.state.msg = \"We don't have a user by that name. Go back and retry it or make a new account.\"\r\n    }\r\n    \r\n    //this.resetUserInputs();\r\n    this.setState({\r\n      question: same_username.question,\r\n      answer: same_username.answer,\r\n      password: same_username.password\r\n    });\r\n  }\r\n  resetAttempting = () => {\r\n    this.setState ({\r\n      attempting_answer: ''\r\n    })\r\n  }\r\n\r\n  submitRetrieving = async (event) => {\r\n    event.preventDefault();\r\n    //console.log(event);\r\n    const attempting_answer = event.target[0].value;\r\n    //console.log(attempting_answer);\r\n    //console.log(this.state);\r\n    if (this.state.answer === attempting_answer){\r\n      this.state.msg = 'Good job! Your password is ' + this.state.password + '. Go back to Login!'\r\n      this.resetUserInputs();\r\n    } else {\r\n      this.state.msg = 'That was not right. Try again!';\r\n      event.target[0].value = '';\r\n      this.resetAttempting();\r\n    }\r\n  }\r\n\r\n  //https://github.com/15Dkatz/official_joke_api\r\n  getJoke = async (event) => {\r\n    const response = await axios.get('https://official-joke-api.appspot.com/random_joke');\r\n    const punchline = response.data.punchline;\r\n    const setup = response.data.setup;\r\n    this.setState({\r\n      joke: setup + ' '  + punchline\r\n    });\r\n  }\r\n\r\n \r\n  onPlayGame = (event) => {\r\n    event.preventDefault();\r\n    this.setState({\r\n      playing:true\r\n    })\r\n    \r\n  }\r\n\r\n  canvasInfo = {\r\n    blob: undefined,\r\n    zoom: 1,\r\n    blobs:[],\r\n    counter: 30,\r\n    timer: undefined,\r\n    interval: undefined\r\n  }\r\n\r\n  timeIt = () => {\r\n    if (this.state.playing) {\r\n      if (this.canvasInfo.counter <= 0) {\r\n        this.canvasInfo.counter = 0\r\n      } else {\r\n        this.canvasInfo.counter--;\r\n      }\r\n      \r\n      this.canvasInfo.timer.html(this.canvasInfo.counter)\r\n    }\r\n    \r\n  }\r\n\r\n  setup = (p5) => {\r\n    this.canvasInfo.timer = p5.select('#timer');\r\n    this.canvasInfo.timer.html(this.canvasInfo.counter);\r\n    this.canvasInfo.interval = setInterval(this.timeIt, 1000);\r\n\r\n    let width = 600;\r\n    let height = 600;\r\n    let xyz = p5.createCanvas(width, height);\r\n    let x = (p5.windowWidth - p5.width) / 2;\r\n    let y = (p5.windowHeight - p5.height) / 2;\r\n    xyz.position(x, y);\r\n    let blobs = [];\r\n    let dumb_num = 200;\r\n    for (let i = 0; i < dumb_num; i++) {\r\n      blobs[i] = new Blob(p5, p5.random(3,5),p5.random(-600, 600), p5.random(-600, 600), i,   \"no user\");\r\n      \r\n    }\r\n    this.canvasInfo.blobs = blobs;\r\n    \r\n    this.canvasInfo.blob = new Blob(p5, 13, p5.random(width), p5.random(height), 6573454, this.state.username);\r\n    console.log(this.canvasInfo.blob);\r\n  }\r\n\r\n  draw = (p5) => {\r\n    if (this.canvasInfo.blob.alive){\r\n    \r\n      p5.background(0); \r\n      p5.translate(p5.width/2, p5.height/2);\r\n      let new_scale = 64 / this.canvasInfo.blob.r;\r\n      this.canvasInfo.zoom = p5.lerp(this.canvasInfo.zoom, new_scale, 0.02);\r\n      p5.scale(this.canvasInfo.zoom);\r\n      p5.translate(-this.canvasInfo.blob.pos.x, -this.canvasInfo.blob.pos.y);\r\n      for (let i = this.canvasInfo.blobs.length-1; i >= 0; i--) {\r\n        let id = this.canvasInfo.blobs[i].id;\r\n        //This is how you avoid drawing/eating yourself.\r\n        \r\n        if (id !== this.canvasInfo.id){\r\n          //This checks if blob has eaten blob[i] \r\n          \r\n          if (this.canvasInfo.blob.eats(this.canvasInfo.blobs[i])){\r\n            this.canvasInfo.blobs.splice(i,1); \r\n            this.canvasInfo.blobs.push(new Blob(p5, p5.random(1,5),p5.random(-600, 600), p5.random(-600, 600), i, \"no user\"));\r\n          } else {\r\n            //If it isn't eaten it gets drawn onto the screen using p5 functions\r\n            this.canvasInfo.blobs[i].show()  \r\n  \r\n          }\r\n            \r\n        } \r\n      }\r\n      this.canvasInfo.blob.show();\r\n      //blob only moves toward your mouse if it is pressed.\r\n      if (p5.mouseIsPressed){\r\n        this.canvasInfo.blob.update();\r\n      }\r\n      //keeps it in bounds\r\n      this.canvasInfo.blob.constrain();\r\n\r\n      if (this.canvasInfo.counter === 0) {\r\n        this.canvasInfo.blob.alive = false;\r\n      }\r\n    } else {\r\n      p5.background(0);\r\n      p5.fill(this.canvasInfo.blob.red, this.canvasInfo.blob.green, this.canvasInfo.blob.blue);\r\n      p5.textSize(60);\r\n      p5.textAlign(p5.CENTER);\r\n      p5.text('Game Over',300, 300);\r\n      p5.textSize(30);\r\n      p5.text('Your Score:', 300, 400);\r\n      p5.text(Math.round(this.canvasInfo.blob.r), 300, 450)\r\n    }\r\n  }\r\n\r\n  goBack = (event) => {\r\n    event.preventDefault();\r\n    clearInterval(this.canvasInfo.interval)\r\n    this.setState({\r\n      register: false,\r\n      retrieving: false,\r\n      loggedin: true,\r\n      playing:false\r\n    });\r\n    this.canvasInfo.counter = 30;\r\n    \r\n    \r\n  }\r\n\r\n  //add back button from game \r\n  render() {\r\n    \r\n    if(this.state.playing) {\r\n      return (\r\n        <div className=\"App\">\r\n          <h1>Play the Game!</h1>\r\n          <p>You have these many seconds remaining:</p>\r\n          <h3 id=\"timer\">2:00</h3>\r\n          <p>Eat as many balls as you can before time runs out!</p>\r\n          <Sketch setup={this.setup} draw={this.draw} className = \"App\"/>\r\n          <button onClick= {this.goBack}>Go Back</button>\r\n        </div>\r\n      )\r\n  \r\n    }\r\n\r\n\r\n    if (this.state.loggedin) {\r\n      return(\r\n          \r\n          <div className =\"app\">\r\n            <h1>Welcome to my Game!</h1>\r\n            <DarkMode/>\r\n            <div className=\"menu\">\r\n              <button onClick= {this.goToLogin}>Log Out</button>\r\n            </div>\r\n            <h3>Before you play here's a joke!</h3>\r\n            <p>{this.state.joke}</p>\r\n            <button onClick = {this.getJoke}>New Joke</button><br/>\r\n            <button onClick = {this.onPlayGame}>Play the game!</button>\r\n          \r\n          </div>\r\n       \r\n        \r\n      )\r\n    }\r\n\r\n    if(this.state.retrieving) {\r\n      return(\r\n        \r\n          <div className =\"app\">\r\n            <h2>Answer your security question</h2>\r\n            <p>{this.state.question}</p>\r\n            <form onSubmit = {this.submitRetrieving}>\r\n              <div className=\"form-group\">\r\n                <label>Answer:<br></br></label>\r\n                <input type=\"text\"\r\n                  name=\"attempting_answer\"\r\n                  value = {this.state.attempting_answer}\r\n                  onChange = {this.handleChange}\r\n                  placeholder=\"Fluffy\"/>\r\n              </div>\r\n              <p>{this.state.msg}</p>\r\n              <button>Submit</button>\r\n              <div>\r\n                <p>Got it?</p>\r\n                <button onClick= {this.goToLogin}>Log in!</button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        \r\n      )\r\n    }\r\n    if (!this.state.loggedin && !this.state.register) {\r\n      return (\r\n        \r\n          <div className =\"app\">\r\n            <h2>Login</h2>\r\n            <form onSubmit = {this.submitLogin}>\r\n              <div className=\"form-group\">\r\n                <label>Username:<br></br></label>\r\n                <input type=\"text\"\r\n                  name=\"username\"\r\n                  placeholder=\"john_smith\"\r\n                  value = {this.state.username}\r\n                  onChange = {this.handleChange}/>\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label>Password:<br></br></label>\r\n                <input type=\"text\"\r\n                  name=\"password\" \r\n                  placeholder=\"unsafe123\"\r\n                  value = {this.state.password}\r\n                  onChange = {this.handleChange}/>\r\n              </div>\r\n              <p>{this.state.msg}</p>\r\n              <button>Log in</button>\r\n              <div>\r\n                <p>Don't have an account?</p>\r\n                <button onClick= {this.goToRegister}>Make one!</button>\r\n              </div>\r\n              <div>\r\n                <p>Forgot your info? Put in your username we'll help!</p>\r\n                <button onClick= {this.getPassword}>Get your password!</button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n\r\n        \r\n        \r\n      )\r\n    }\r\n\r\n    if (!this.state.loggedin && this.state.register){\r\n      return (\r\n        \r\n          <div className =\"app\">\r\n            <h2>Make a User Profile</h2>\r\n            <form onSubmit = {this.submitRegister}>\r\n              <div className=\"form-group\">\r\n                <label>Username:<br></br></label>\r\n                <input type=\"text\"\r\n                  name=\"username\"\r\n                  placeholder=\"john_smith\"\r\n                  value = {this.state.username}\r\n                  onChange = {this.handleChange}/>\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label>Password:<br></br></label>\r\n                <input type=\"text\"\r\n                  name=\"password\" \r\n                  placeholder=\"unsafe123\"\r\n                  value = {this.state.password}\r\n                  onChange = {this.handleChange}/>\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label>Security Question:<br></br></label>\r\n                <input type=\"text\"\r\n                  name=\"question\"\r\n                  placeholder=\"Name of my first cat?\"\r\n                  value = {this.state.question}\r\n                  onChange = {this.handleChange}/>\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label>Answer:<br></br></label>\r\n                <input type=\"text\"\r\n                  name=\"answer\"\r\n                  placeholder=\"Fluffy\"\r\n                  value = {this.state.answer}\r\n                  onChange = {this.handleChange}/>\r\n              </div>\r\n              <p>{this.state.msg}</p>\r\n              <button>Create</button>\r\n              <div>\r\n                <p>Have an account?</p>\r\n                <button onClick= {this.goToLogin}>Log in!</button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n\r\n       \r\n        \r\n      )\r\n    } \r\n  }\r\n}\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}